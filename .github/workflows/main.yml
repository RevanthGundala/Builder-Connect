name: Builder Connect

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Build
        working-directory: ./builder_connect
        run: cargo build --verbose
      - name: Run tests
        working-directory: ./builder_connect
        run: cargo test --verbose

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        working-directory: ./builder_connect_ui
        run: npm install
      - name: Build
        working-directory: ./builder_connect_ui
        run: npm run build

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # TODO: Figure out why its not working
      # - name: Build and push
      #   # uses: docker/bake-action@v4
      #   uses: docker/build-push-action@v5
      #   with:
      #     file: ./builder_connect/Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/builder-connect:latest

      # TODO: Switch from hardcode to secrets
  deploy:
    needs: [backend, frontend, docker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Install sshpass
        run: sudo apt-get install sshpass
      - name: Copy docker-compose.yml to droplet
        working-directory: ./builder_connect
        run: sshpass -p Chikki092502! scp -o StrictHostKeyChecking=no compose.yaml root@${{ vars.DROPLET_IP }}:~
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DROPLET_IP }}
          username: root
          password: Chikki092502!
          script: |
            cd ./builder_connect
            export MONGOURI=mongodb+srv://RevanthGundala:uJyFq49UKPp1SQUE@builderconnectdb.214izk0.mongodb.net/?retryWrites=true&w=majority
            export HUGGING_FACE_API_KEY=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
            export HUGGING_FACE_API_URL=https://api-inference.huggingface.co/pipeline/feature-extraction/sentence-transformers/all-MiniLM-L6-v2
            export GOOGLE_OAUTH_CLIENT_ID=969436684497-k1k6fm7tnrsrhs8tvucn9ql0qi8bl2sn.apps.googleusercontent.com
            export GOOGLE_OAUTH_CLIENT_SECRET=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
            export GOOGLE_OAUTH_TOKEN_URL=https://www.googleapis.com/oauth2/v4/token
            export GOOGLE_OAUTH_AUTH_URL=https://accounts.google.com/o/oauth2/v2/auth
            export GOOGLE_OAUTH_REDIRECT_URL=http://localhost:8080/login/callback/google
            export DISCORD_OAUTH_TOKEN_URL=https://discord.com/api/oauth2/token
            export DISCORD_OAUTH_AUTH_URL=https://discord.com/api/oauth2/authorize
            export DISCORD_OAUTH_CLIENT_ID=403767917302513665
            export DISCORD_OAUTH_CLIENT_SECRET=wpV0QRE2pypB4-fEO6H8N7wvUX4dblgJ
            export DISCORD_OAUTH_REDIRECT_URL=http://localhost:8080/login/callback/discord
            export BUILDWORK_EMAIL=thebuildwork@gmail.com
            export BUILDWORK_EMAIL_PASSWORD=ljjxvhnsicexasle
            export PRODUCTION_URL=https://www.thebuildwork.com
            export LOCALHOST=http://localhost:3001
            export IN_PRODUCTION=true
            docker-compose down
            docker-compose pull
            docker-compose up -d
