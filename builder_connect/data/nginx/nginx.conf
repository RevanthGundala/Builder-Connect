user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # ...
}

http {
    # Your existing HTTP server configuration
    server {
        listen 80;
        server_name api.thebuildwork.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name api.thebuildwork.com;
        ssl_certificate /etc/letsencrypt/live/api.thebuildwork.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/api.thebuildwork.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        location / {
            proxy_pass http://api:8080;
            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }
    }
}

# Stream block for Redis over SSL
stream {
    upstream redis {
        server redis:6379;  # Ensure this matches the name of your Redis service in docker-compose
    }

    server {
        listen 6379 ssl;  # Listen for SSL connections on Redis port
        ssl_certificate /etc/letsencrypt/live/api.thebuildwork.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.thebuildwork.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        proxy_pass redis;
    }
}
